<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
<div class="facebookBackground" id="decorEditBackground" style="display: block; width: 710px; height: 830px;float:left;">
	<div class="facebookHeader"></div>
	<section id="wrapper">
	<div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div></div></div>
	  <div id="holder">
		  <h1 class="textholder">Selecciona imagen para el no fans</h1>
		  <img src="" class="imageedit" width="660" height="100%">
	  </div>
	  <p id="upload" class="hidden"><label>Drag & drop not supported, but you can still upload via this input field:<br><input type="file"></label></p>
	  <p id="filereader">File API & FileReader API not supported</p>
	  <p id="formdata">XHR2's FormData is not supported</p>
	  <p id="progress">XHR2's upload progress isn't supported</p>
	  <p class="progressbar">Progreso de Subida: <progress id="uploadprogress" min="0" max="100" value="0">0</progress></p>
	<script>
	var holder = document.getElementById('holder'),
	    tests = {
	      filereader: typeof FileReader != 'undefined',
	      dnd: 'draggable' in document.createElement('span'),
	      formdata: !!window.FormData,
	      progress: "upload" in new XMLHttpRequest
	    }, 
	    support = {
	      filereader: document.getElementById('filereader'),
	      formdata: document.getElementById('formdata'),
	      progress: document.getElementById('progress')
	    },
	    acceptedTypes = {
	      'image/png': true,
	      'image/jpeg': true,
	      'image/gif': true
	    },
	    progress = document.getElementById('uploadprogress'),
	    fileupload = document.getElementById('upload');

	"filereader formdata progress".split(' ').forEach(function (api) {
	  if (tests[api] === false) {
	    support[api].className = 'fail';
	  } else {
	    // FFS. I could have done el.hidden = true, but IE doesn't support
	    // hidden, so I tried to create a polyfill that would extend the
	    // Element.prototype, but then IE10 doesn't even give me access
	    // to the Element object. Brilliant.
	    support[api].className = 'hidden';
	  }
	});

	function previewfile(file) {
	  if (tests.filereader === true && acceptedTypes[file.type] === true) {
	    var reader = new FileReader();
	    reader.onload = function (event) {
	      var image = new Image();
	      image.src = event.target.result;
	      image.width = 250; // a fake resize
	      //holder.appendChild(image);
		  $(".textholder").hide();
		  $(".imageedit").attr("src",image.src);
	    };

	    reader.readAsDataURL(file);
	  }  else {
	    holder.innerHTML += '<p>Uploaded ' + file.name + ' ' + (file.size ? (file.size/1024|0) + 'K' : '');
	    console.log(file);
	  }
	}

	function readfiles(files) {
	    debugger;
	    var formData = tests.formdata ? new FormData() : null;
	    for (var i = 0; i < files.length; i++) {
	      if (tests.formdata) formData.append('file', files[i]);
	      previewfile(files[i]);
	    }

	    // now post a new XHR request
	    if (tests.formdata) {
	      var xhr = new XMLHttpRequest();
	      xhr.open('POST', '/devnull.php');
	      xhr.onload = function() {
	        progress.value = progress.innerHTML = 100;
	      };

	      if (tests.progress) {
	        xhr.upload.onprogress = function (event) {
	          if (event.lengthComputable) {
	            var complete = (event.loaded / event.total * 100 | 0);
	            progress.value = progress.innerHTML = complete;
	          }
	        }
	      }

	      xhr.send(formData);
	    }
	}

	if (tests.dnd) { 
	  holder.ondragover = function () { this.className = 'hover'; return false; };
	  holder.ondragend = function () { this.className = ''; return false; };
	  holder.ondrop = function (e) {
	    this.className = '';
	    e.preventDefault();
	    readfiles(e.dataTransfer.files);
	  }
	} else {
	  fileupload.className = 'hidden';
	  fileupload.querySelector('input').onchange = function () {
	    readfiles(this.files);
	  };
	}

	</script>
	</section>
</div>
	<div class="" id="decorEditBackground" style="display: block; float:left;width: 156px; height: 1016px;">
	<a href="#" class="addbottom">AÃ±adir Boton</a>
</div>
<script>
$('.addbottom').click(function(){
	$('#holder').append( "<a href='' class='startbutton'><div class='minibox scale'>BOTON</div></a>" );
	$(".minibox" ).draggable({ containment: "#holder", scroll: true });
	$(".minibox").resizable({containment: "#holder"});
});
</script>









